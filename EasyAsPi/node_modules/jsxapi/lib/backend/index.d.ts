/// <reference types="node" />
import { EventEmitter } from 'events';
import { XapiRequest, XapiResult } from '../xapi/types';
export interface Backend extends EventEmitter {
    close(): void;
    execute(request: XapiRequest): Promise<void>;
}
export default class BackendImpl extends EventEmitter implements Backend {
    get isReady(): Promise<boolean>;
    private requests;
    close(): void;
    execute(request: XapiRequest): Promise<void>;
    onFeedback(result: any): void;
    onResult(id: string, result: XapiResult): void;
    send(id: string, command: string, body: string): void;
    defaultHandler({ method }: any, send?: any): Promise<void>;
    private getRequestType;
}
