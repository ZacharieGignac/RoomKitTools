/// <reference types="node" />
import { Duplex } from 'stream';
import { FeedbackInterceptor } from './feedback';
export interface CloseableStream extends Duplex {
    close(): void;
}
export declare type Canceler = () => void;
export declare type Handler = () => void;
export declare type Path = string | string[];
export declare type NormalizedPath = (string | number)[];
export declare type Listener<T = any> = (ev: T, root: any) => void;
export interface XapiOptions {
    feedbackInterceptor?: FeedbackInterceptor;
    seal?: boolean;
}
export interface XapiRequest {
    id?: string;
    method: string;
    jsonrpc: string;
    params?: any;
}
export interface XapiResponse {
    id: string;
    method: string;
    params: any;
    result: XapiResult;
    error: XapiError;
}
export interface XapiResult {
    Id: number;
}
export interface XapiError {
    message: string;
}
