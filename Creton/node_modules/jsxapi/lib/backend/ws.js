"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var events_1 = require("events");
var log_1 = __importDefault(require("../log"));
var WSBackend = (function (_super) {
    __extends(WSBackend, _super);
    function WSBackend(urlOrWS) {
        var _this = _super.call(this) || this;
        _this.handleClose = function (event) {
            if (event.code !== 1000) {
                _this.emit('error', 'WebSocket closed unexpectedly');
            }
            else {
                _this.emit('close');
            }
        };
        _this.handleError = function (error) {
            _this.emit('error', error.error);
        };
        _this.handleMessage = function (message) {
            log_1.default.debug('[transport] (receive): ', message.data);
            var data = JSON.parse(message.data);
            _this.emit('data', data);
        };
        _this.ws = typeof urlOrWS !== 'string' ? urlOrWS : new WebSocket(urlOrWS);
        _this.ws.onclose = _this.handleClose;
        _this.ws.onerror = _this.handleError;
        _this.ws.onmessage = _this.handleMessage;
        var resolveReady;
        _this.isReady = new Promise(function (r) {
            resolveReady = r;
        });
        _this.ws.onopen = function () {
            _this.emit('ready');
            resolveReady(true);
        };
        return _this;
    }
    WSBackend.prototype.close = function () {
        this.ws.close();
    };
    WSBackend.prototype.execute = function (command) {
        var _this = this;
        return this.isReady.then(function () {
            log_1.default.debug('[transport] (send): ', JSON.stringify(command));
            _this.ws.send(JSON.stringify(command));
        });
    };
    return WSBackend;
}(events_1.EventEmitter));
exports.default = WSBackend;
